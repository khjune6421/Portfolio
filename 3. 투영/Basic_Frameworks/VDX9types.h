#pragma once
#include <Windows.h>

// VD 색상, 포맷 정의 (D3DFORMAT)
enum VDFORMAT
{
	VDFMT_UNKNOWN = 0,

	VDFMT_R8G8B8 = 20,
	VDFMT_A8R8G8B8 = 21,
	VDFMT_X8R8G8B8 = 22,
	VDFMT_R5G6B5 = 23,
	VDFMT_X1R5G5B5 = 24,
	VDFMT_A1R5G5B5 = 25,
	VDFMT_A4R4G4B4 = 26,
	VDFMT_R3G3B2 = 27,
	VDFMT_A8 = 28,
	VDFMT_A8R3G3B2 = 29,
	VDFMT_X4R4G4B4 = 30,
	VDFMT_A2B10G10R10 = 31,
	VDFMT_A8B8G8R8 = 32,
	VDFMT_X8B8G8R8 = 33,
	VDFMT_G16R16 = 34,
	VDFMT_A2R10G10B10 = 35,
	VDFMT_A16B16G16R16 = 36,

	VDFMT_A8P8 = 40,
	VDFMT_P8 = 41,

	VDFMT_L8 = 50,
	VDFMT_A8L8 = 51,
	VDFMT_A4L4 = 52,

	VDFMT_V8U8 = 60,
	VDFMT_L6V5U5 = 61,
	VDFMT_X8L8V8U8 = 62,
	VDFMT_Q8W8V8U8 = 63,
	VDFMT_V16U16 = 64,
	VDFMT_A2W10V10U10 = 67,

	VDFMT_UYVY = MAKEFOURCC('U', 'Y', 'V', 'Y'),
	VDFMT_R8G8_B8G8 = MAKEFOURCC('R', 'G', 'B', 'G'),
	VDFMT_YUY2 = MAKEFOURCC('Y', 'U', 'Y', '2'),
	VDFMT_G8R8_G8B8 = MAKEFOURCC('G', 'R', 'G', 'B'),
	VDFMT_DXT1 = MAKEFOURCC('D', 'X', 'T', '1'),
	VDFMT_DXT2 = MAKEFOURCC('D', 'X', 'T', '2'),
	VDFMT_DXT3 = MAKEFOURCC('D', 'X', 'T', '3'),
	VDFMT_DXT4 = MAKEFOURCC('D', 'X', 'T', '4'),
	VDFMT_DXT5 = MAKEFOURCC('D', 'X', 'T', '5'),

	VDFMT_D16_LOCKABLE = 70,
	VDFMT_D32 = 71,
	VDFMT_D15S1 = 73,
	VDFMT_D24S8 = 75,
	VDFMT_D24X8 = 77,
	VDFMT_D24X4S4 = 79,
	VDFMT_D16 = 80,

	VDFMT_D32F_LOCKABLE = 82,
	VDFMT_D24FS8 = 83,

#if !defined(VD_DISABLE_9EX)
	VDFMT_D32_LOCKABLE = 84,
	VDFMT_S8_LOCKABLE = 85,
#endif // !VD_DISABLE_9EX

	VDFMT_L16 = 81,

	VDFMT_VERTEXDATA = 100,
	VDFMT_INDEX16 = 101,
	VDFMT_INDEX32 = 102,

	VDFMT_Q16W16V16U16 = 110,

	VDFMT_MULTI2_ARGB8 = MAKEFOURCC('M', 'E', 'T', '1'),

	VDFMT_R16F = 111,
	VDFMT_G16R16F = 112,
	VDFMT_A16B16G16R16F = 113,

	VDFMT_R32F = 114,
	VDFMT_G32R32F = 115,
	VDFMT_A32B32G32R32F = 116,

	VDFMT_CxV8U8 = 117,

#if !defined(VD_DISABLE_9EX)
	VDFMT_A1 = 118,
	VDFMT_A2B10G10R10_XR_BIAS = 119,
	VDFMT_BINARYBUFFER = 199,
#endif // !VD_DISABLE_9EX

	VDFMT_FORCE_DWORD = 0x7fffffff
};

// VD 리소스 타입 정의 (D3DRESOURCETYPE)
enum VDRESOURCETYPE
{
	VDRTYPE_SURFACE = 1,
	VDRTYPE_VOLUME = 2,
	VDRTYPE_TEXTURE = 3,
	VDRTYPE_VOLUMETEXTURE = 4,
	VDRTYPE_CUBETEXTURE = 5,
	VDRTYPE_VERTEXBUFFER = 6,
	VDRTYPE_INDEXBUFFER = 7,
	VDRTYPE_FORCE_DWORD = 0x7fffffff
};

// VD 리소스 풀 정의 (D3DPOOL)
typedef enum VDPOOL
{
	VDPOOL_DEFAULT = 0,
	VDPOOL_MANAGED = 1,
	VDPOOL_SYSTEMMEM = 2,
	VDPOOL_SCRATCH = 3,
	VDPOOL_FORCE_DWORD = 0x7fffffff
};

// VD 그리는 형태 정의 (D3DPRIMITIVETYPE)
typedef enum VDPRIMITIVETYPE
{
	VDPT_POINTLIST = 1,
	VDPT_LINELIST = 2,
	VDPT_LINESTRIP = 3,
	VDPT_TRIANGLELIST = 4,
	VDPT_TRIANGLESTRIP = 5,
	VDPT_TRIANGLEFAN = 6,
	VDPT_FORCE_DWORD = 0x7fffffff
};

// VD 변환 상태 타입 정의 (D3DTRANSFORMSTATETYPE)
typedef enum VDTRANSFORMSTATETYPE
{
	VDTS_WORLD = 0,
	VDTS_VIEW = 1,
	VDTS_PROJECTION = 2,
	VDTS_TEXTURE0 = 3,
	VDTS_TEXTURE1 = 4,
	VDTS_TEXTURE2 = 5,
	VDTS_TEXTURE3 = 6,
	VDTS_TEXTURE4 = 7,
	VDTS_TEXTURE5 = 8,
	VDTS_TEXTURE6 = 9,
	VDTS_TEXTURE7 = 10,
	VDTS_FORCE_DWORD = 0x7fffffff
};

// VD 텍스처 필터링 타입 정의 (D3DTEXTUREFILTERTYPE)
typedef enum VDTEXTUREFILTERTYPE
{
	VDTF_NONE = 0,
	VDTF_POINT = 1,
	VDTF_LINEAR = 2,
	VDTF_ANISOTROPIC = 3,
	VDTF_PYRAMIDALQUAD = 6,
	VDTF_GAUSSIANQUAD = 7,
	VDTF_FORCE_DWORD = 0x7fffffff
};

// VD 렌더 상태 타입 정의 (D3DRENDERSTATETYPE)
typedef enum VDRENDERSTATETYPE
{
	VDRS_ZENABLE,
	VDRS_FILLMODE,
	VDRS_SHADEMODE,
	VDRS_ZWRITEENABLE,
	VDRS_ALPHATESTENABLE,
	VDRS_LASTPIXEL,
	VDRS_SRCBLEND,
	VDRS_DESTBLEND,
	VDRS_CULLMODE,
	VDRS_ZFUNC,
	VDRS_ALPHAREF,
	VDRS_ALPHAFUNC,
	VDRS_DITHERENABLE,
	VDRS_ALPHABLENDENABLE,
	VDRS_FOGENABLE,
	VDRS_SPECULARENABLE,
	VDRS_FOGCOLOR,
	VDRS_FOGTABLEMODE,
	VDRS_FOGSTART,
	VDRS_FOGEND,
	VDRS_FOGDENSITY,
	VDRS_RANGEFOGENABLE,
	VDRS_STENCILENABLE,
	VDRS_STENCILFAIL,
	VDRS_STENCILZFAIL,
	VDRS_STENCILPASS,
	VDRS_STENCILFUNC,
	VDRS_STENCILREF,
	VDRS_STENCILMASK,
	VDRS_STENCILWRITEMASK,
	VDRS_TEXTUREFACTOR,
	VDRS_WRAP0,
	VDRS_WRAP1,
	VDRS_WRAP2,
	VDRS_WRAP3,
	VDRS_WRAP4,
	VDRS_WRAP5,
	VDRS_WRAP6,
	VDRS_WRAP7,
	VDRS_CLIPPING,
	VDRS_LIGHTING,
	VDRS_AMBIENT,
	VDRS_FOGVERTEXMODE,
	VDRS_COLORVERTEX,
	VDRS_LOCALVIEWER,
	VDRS_NORMALIZENORMALS,
	VDRS_DIFFUSEMATERIALSOURCE,
	VDRS_SPECULARMATERIALSOURCE,
	VDRS_AMBIENTMATERIALSOURCE,
	VDRS_EMISSIVEMATERIALSOURCE,
	VDRS_VERTEXBLEND,
	VDRS_CLIPPLANEENABLE,
	VDRS_POINTSIZE,
	VDRS_POINTSIZE_MIN,
	VDRS_POINTSPRITEENABLE,
	VDRS_POINTSCALEENABLE,
	VDRS_POINTSCALE_A,
	VDRS_POINTSCALE_B,
	VDRS_POINTSCALE_C,
	VDRS_MULTISAMPLEANTIALIAS,
	VDRS_MULTISAMPLEMASK,
	VDRS_PATCHEDGESTYLE,
	VDRS_DEBUGMONITORTOKEN,
	VDRS_POINTSIZE_MAX,
	VDRS_INDEXEDVERTEXBLENDENABLE,
	VDRS_COLORWRITEENABLE,
	VDRS_TWEENFACTOR,
	VDRS_BLENDOP,
	VDRS_POSITIONDEGREE,
	VDRS_NORMALDEGREE,
	VDRS_SCISSORTESTENABLE,
	VDRS_SLOPESCALEDEPTHBIAS,
	VDRS_ANTIALIASEDLINEENABLE,
	VDRS_MINTESSELLATIONLEVEL,
	VDRS_MAXTESSELLATIONLEVEL,
	VDRS_ADAPTIVETESS_X,
	VDRS_ADAPTIVETESS_Y,
	VDRS_ADAPTIVETESS_Z,
	VDRS_ADAPTIVETESS_W,
	VDRS_ENABLEADAPTIVETESSELLATION,
	VDRS_TWOSIDEDSTENCILMODE,
	VDRS_CCW_STENCILFAIL,
	VDRS_CCW_STENCILZFAIL,
	VDRS_CCW_STENCILPASS,
	VDRS_CCW_STENCILFUNC,
	VDRS_COLORWRITEENABLE1,
	VDRS_COLORWRITEENABLE2,
	VDRS_COLORWRITEENABLE3,
	VDRS_BLENDFACTOR,
	VDRS_SRGBWRITEENABLE,
	VDRS_DEPTHBIAS,
	VDRS_WRAP8,
	VDRS_WRAP9,
	VDRS_WRAP10,
	VDRS_WRAP11,
	VDRS_WRAP12,
	VDRS_WRAP13,
	VDRS_WRAP14,
	VDRS_WRAP15,
	VDRS_SEPARATEALPHABLENDENABLE,
	VDRS_SRCBLENDALPHA,
	VDRS_DESTBLENDALPHA,
	VDRS_BLENDOPALPHA,
	VDRS_FORCE_DWORD,
	VDRS_GRIDMODE,
	VDRS_AXISMODE
};

// VD 렌더링 필 모드 정의 (D3DFILLMODE)
enum VDFILLMODE
{
	VDFILL_POINT,
	VDFILL_WIREFRAME,
	VDFILL_SOLID,
	VDFILL_FORCE_DWORD
};

// VD 컬링 모드 정의 (D3DCULL)
enum VDCULL
{
	VDCULL_NONE = 1,
	VDCULL_CW = 2,
	VDCULL_CCW = 3,
	VDCULL_FORCE_DWORD = 0x7fffffff
};

// VD 디바이스 생성 플래그 (D3DCREATE)
enum VDCREATE
{
	VDCREATE_FPU_PRESERVE = 0x00000002,
	VDCREATE_MULTITHREADED = 0x00000004,
	VDCREATE_PUREDEVICE = 0x00000010,
	VDCREATE_SOFTWARE_VERTEXPROCESSING = 0x00000020,
	VDCREATE_HARDWARE_VERTEXPROCESSING = 0x00000040,
	VDCREATE_MIXED_VERTEXPROCESSING = 0x00000080,
	VDCREATE_FORCE_DWORD = 0x7fffffff
};

// VD 디스플레이 모드 (D3DDISPLAYMODE)
typedef struct VDDISPLAYMODE
{
	UINT Width;
	UINT Height;
	UINT RefreshRate;
};

// VD 프레젠트 파라미터 (D3DPRESENT_PARAMETERS)
typedef struct VDPRESENT_PARAMETERS
{
	UINT BackBufferWidth;
	UINT BackBufferHeight;
	UINT BackBufferCount;

	HWND hDeviceWindow;
	BOOL Windowed;
	BOOL EnableAutoDepthStencil;
	UINT Flags;

	UINT FullScreen_RefreshRateInHz;
	UINT PresentationInterval;
};

// VD 버텍스 버퍼 디스크립션 (D3DVERTEXBUFFER_DESC)
typedef struct VDVERTEXBUFFER_DESC
{
	VDFORMAT Format;
	VDRESOURCETYPE Type;
	UINT Usage;
	VDPOOL Pool;
	UINT Size;
	DWORD FVF;
};

typedef struct VDVIEWPORT
{
	UINT X;
	UINT Y;
	UINT Width;
	UINT Height;
	float MinZ;
	float MaxZ;
};

constexpr auto VD2D = 0x0001;
constexpr auto VD3D = 0x0002;
constexpr auto VDDIFFUSE = 0x0040;

constexpr auto VDUSAGE_RENDER_TARGET = 0x00000001L;
constexpr auto VDUSAGE_DEPTH_STENCIL = 0x00000002L;
constexpr auto VDUSAGE_DYNAMIC = 0x00000200L;

constexpr auto VDUSAGE_WRITEONLY = 0x00000008L;
constexpr auto VDUSAGE_SOFTWARE_PROCESSING = 0x00000010L;